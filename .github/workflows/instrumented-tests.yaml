name: Instrumented Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  instrumented-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        api-level: [29, 33]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache Gradle packages
        uses: gradle/actions/setup-gradle@v3

      - name: Cache AVD
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: instrumented-test-results-${{ matrix.api-level }}
          path: |
            **/build/reports/androidTests/
            **/build/outputs/androidTest-results/

      - name: Generate test report
        uses: dorny/test-reporter@v2
        if: success() || failure()
        with:
          name: Instrumented Test Results (API ${{ matrix.api-level }})
          path: '**/TEST-*.xml'
          reporter: java-junit
